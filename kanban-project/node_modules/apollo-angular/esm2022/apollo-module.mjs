import { NgModule } from '@angular/core';
import { Apollo } from './apollo';
import { APOLLO_FLAGS, APOLLO_NAMED_OPTIONS, APOLLO_OPTIONS } from './tokens';
import * as i0 from "@angular/core";
/**
 * This is deprecated and will be removed in the next major version, because
 * Angular is moving toward a moduleless ecosystem.
 *
 * Instead, use either `provideApollo()` or `provideNamedApollo()`.
 *
 * @deprecated
 */
export class ApolloModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: ApolloModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.5", ngImport: i0, type: ApolloModule });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: ApolloModule, providers: [Apollo] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.5", ngImport: i0, type: ApolloModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [Apollo],
                }]
        }] });
export function provideApollo(optionsFactory, flags = {}) {
    return [
        Apollo,
        {
            provide: APOLLO_OPTIONS,
            useFactory: optionsFactory,
        },
        {
            provide: APOLLO_FLAGS,
            useValue: flags,
        },
    ];
}
export function provideNamedApollo(optionsFactory, flags = {}) {
    return [
        Apollo,
        {
            provide: APOLLO_NAMED_OPTIONS,
            useFactory: optionsFactory,
        },
        {
            provide: APOLLO_FLAGS,
            useValue: flags,
        },
    ];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBvbGxvLW1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcG9sbG8tbW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQVksTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUNsQyxPQUFPLEVBQUUsWUFBWSxFQUFFLG9CQUFvQixFQUFFLGNBQWMsRUFBRSxNQUFNLFVBQVUsQ0FBQzs7QUFHOUU7Ozs7Ozs7R0FPRztBQUlILE1BQU0sT0FBTyxZQUFZO3VHQUFaLFlBQVk7d0dBQVosWUFBWTt3R0FBWixZQUFZLGFBRlosQ0FBQyxNQUFNLENBQUM7OzJGQUVSLFlBQVk7a0JBSHhCLFFBQVE7bUJBQUM7b0JBQ1IsU0FBUyxFQUFFLENBQUMsTUFBTSxDQUFDO2lCQUNwQjs7QUFHRCxNQUFNLFVBQVUsYUFBYSxDQUMzQixjQUFzRCxFQUN0RCxRQUFlLEVBQUU7SUFFakIsT0FBTztRQUNMLE1BQU07UUFDTjtZQUNFLE9BQU8sRUFBRSxjQUFjO1lBQ3ZCLFVBQVUsRUFBRSxjQUFjO1NBQzNCO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsWUFBWTtZQUNyQixRQUFRLEVBQUUsS0FBSztTQUNoQjtLQUNGLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxjQUFrQyxFQUNsQyxRQUFlLEVBQUU7SUFFakIsT0FBTztRQUNMLE1BQU07UUFDTjtZQUNFLE9BQU8sRUFBRSxvQkFBb0I7WUFDN0IsVUFBVSxFQUFFLGNBQWM7U0FDM0I7UUFDRDtZQUNFLE9BQU8sRUFBRSxZQUFZO1lBQ3JCLFFBQVEsRUFBRSxLQUFLO1NBQ2hCO0tBQ0YsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFwb2xsb0NsaWVudE9wdGlvbnMgfSBmcm9tICdAYXBvbGxvL2NsaWVudC9jb3JlJztcbmltcG9ydCB7IEFwb2xsbyB9IGZyb20gJy4vYXBvbGxvJztcbmltcG9ydCB7IEFQT0xMT19GTEFHUywgQVBPTExPX05BTUVEX09QVElPTlMsIEFQT0xMT19PUFRJT05TIH0gZnJvbSAnLi90b2tlbnMnO1xuaW1wb3J0IHsgRmxhZ3MsIE5hbWVkT3B0aW9ucyB9IGZyb20gJy4vdHlwZXMnO1xuXG4vKipcbiAqIFRoaXMgaXMgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIHRoZSBuZXh0IG1ham9yIHZlcnNpb24sIGJlY2F1c2VcbiAqIEFuZ3VsYXIgaXMgbW92aW5nIHRvd2FyZCBhIG1vZHVsZWxlc3MgZWNvc3lzdGVtLlxuICpcbiAqIEluc3RlYWQsIHVzZSBlaXRoZXIgYHByb3ZpZGVBcG9sbG8oKWAgb3IgYHByb3ZpZGVOYW1lZEFwb2xsbygpYC5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICovXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtBcG9sbG9dLFxufSlcbmV4cG9ydCBjbGFzcyBBcG9sbG9Nb2R1bGUge31cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3ZpZGVBcG9sbG88VENhY2hlU2hhcGUgPSBhbnk+KFxuICBvcHRpb25zRmFjdG9yeTogKCkgPT4gQXBvbGxvQ2xpZW50T3B0aW9uczxUQ2FjaGVTaGFwZT4sXG4gIGZsYWdzOiBGbGFncyA9IHt9LFxuKTogUHJvdmlkZXIge1xuICByZXR1cm4gW1xuICAgIEFwb2xsbyxcbiAgICB7XG4gICAgICBwcm92aWRlOiBBUE9MTE9fT1BUSU9OUyxcbiAgICAgIHVzZUZhY3Rvcnk6IG9wdGlvbnNGYWN0b3J5LFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogQVBPTExPX0ZMQUdTLFxuICAgICAgdXNlVmFsdWU6IGZsYWdzLFxuICAgIH0sXG4gIF07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm92aWRlTmFtZWRBcG9sbG8oXG4gIG9wdGlvbnNGYWN0b3J5OiAoKSA9PiBOYW1lZE9wdGlvbnMsXG4gIGZsYWdzOiBGbGFncyA9IHt9LFxuKTogUHJvdmlkZXIge1xuICByZXR1cm4gW1xuICAgIEFwb2xsbyxcbiAgICB7XG4gICAgICBwcm92aWRlOiBBUE9MTE9fTkFNRURfT1BUSU9OUyxcbiAgICAgIHVzZUZhY3Rvcnk6IG9wdGlvbnNGYWN0b3J5LFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogQVBPTExPX0ZMQUdTLFxuICAgICAgdXNlVmFsdWU6IGZsYWdzLFxuICAgIH0sXG4gIF07XG59XG4iXX0=